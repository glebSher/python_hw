# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
# üìå –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞—á—É 4.
# üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.
# üìå –ü—Ä–∏ —ç—Ç–æ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ª—é–±–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–æ–∂–Ω–æ –æ–ø—É—Å—Ç–∏—Ç—å. –í
# —ç—Ç–æ–º —Å–ª—É—á–∞–µ –±–µ—Ä—ë—Ç—Å—è –ø–µ—Ä–≤—ã–π –≤ –º–µ—Å—è—Ü–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, —Ç–µ–∫—É—â–∏–π
# –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏/–∏–ª–∏ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü.
# üìå *–ù–∞—É—á–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ
# –Ω–∞–∑–≤–∞–Ω–∏—è –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –∏ –º–µ—Å—è—Ü–∞, –Ω–æ –∏ —á–∏—Å–ª–æ–≤—ã–µ,
# —Ç.–µ –Ω–µ –º–∞—è, –∞ 5.

from datetime import datetime
import logging
import argparse

MONTHS = ('', '—è–Ω–≤', '—Ñ–µ–≤', '–º–∞—Ä', '–∞–ø—Ä', '–º–∞—è', '–∏—é–Ω', '–∏—é–ª',
          '–∞–≤–≥', '—Å–µ–Ω', '–æ–∫—Ç', '–Ω–æ—è', '–¥–µ–∫')
DAYS = ('–ø–æ–Ω–µ', '–≤—Ç–æ—Ä', '—Å—Ä–µ–¥', '—á–µ—Ç–≤', '–ø—è—Ç–Ω', '—Å—É–±–±', '–≤–æ—Å–∫')

logging.basicConfig(level=logging.ERROR, filename='loggingError.log', encoding='utf-8')
logger = logging.getLogger('__name__')


def get_date(date: str):
    try:
        count, week_day, month = date.split()
    except ValueError as e:
        logger.error(f'–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–±–∏—Ç—å —Å—Ç—Ä–æ–∫—É –Ω–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã')
        return

    count = int(count[0]) if count.isdigit() else int(count[0])
    week_day = int(week_day) if week_day.isdigit() else DAYS.index(week_day[:4])
    month = MONTHS.index(month[:3])
    tmp = 0
    for day in range(1, 31 + 1):
        date = datetime(day=day, month=month, year=datetime.now().year)
        if date.weekday() == week_day:
            tmp += 1
            if tmp == count:
                return date


def parser():
    new_parser = argparse.ArgumentParser(prog='get_date()',
                                         description='–ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –ø–æ –¥–Ω—é –Ω–µ–¥–µ–ª–∏ –∏ –º–µ—Å—è—Ü—É',
                                         epilog='–ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –≤–æ–∑—å–º–µ–º —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏ –º–µ—Å—è—Ü'
                                         )
    new_parser.add_argument('-c', '--count', default=1, help='–ö–∞–∫–æ–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –ø–æ —Å—á–µ—Ç—É')
    new_parser.add_argument('-w', '--week_day', default=datetime.now().weekday(), help='–ö–∞–∫–æ–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏')
    new_parser.add_argument('-m', '--month', default=datetime.now().month, help='–ö–∞–∫–æ–π –º–µ—Å—è—Ü')
    args = new_parser.parse_args()
    print(args.week_day)

    return get_date(f'{args.count} {args.week_day} {args.month}')

if __name__ == '__main__':
    print(get_date('1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è'))
    print(get_date('3-—è —Å—Ä–µ–¥–∞ –º–∞—è'))
    print(parser())
    # print(datetime.now().day_name())
